#Порт запуска консоли
server.port=${PORT:8080}

#Путь создания файла config.json
config.file.path=../data

#Уровень логирования. Возможные варианты: OFF, FATAl, ERROR, WARN, INFO, DEBUG, TRACE, ALL
logging.level.config=${LOGGING_LEVEL:INFO}
#Путь к каталогу для сохранения файлов логов
logging.file.path=../log
#Имя файла логов
logging.file.name=info
#Паттерн вывода сообщения в логи
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
#Общий размер логов
logging.total-size-cap=500MB
#Количество дней хранения логов
logging.max-history-days=7

#Если задано значение 'true', отправка логов в файл выключится и включится отправка в syslog
send.log.to.syslog=${SYSLOG_ENABLED:false}
#Адрес syslog
syslog.host=${SYSLOG_HOST:localhost}
#Идентификации источника сообщения. Возможные варианты:KERN, USER, MAIL, DAEMON, AUTH, SYSLOG, LPR, NEWS, UUCP, CRON, AUTHPRIV, FTP, NTP, AUDIT, ALERT, CLOCK, LOCAL0, LOCAL1, LOCAL2, LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7
syslog.facility=${SYSLOG_FACILITY:LOCAL0}

#Алгоритм шифрования паролей
cryptography.algorithm=AES
#Ключ шифрования паролей (значение будет загружено из Docker secret)
cryptography.key=${CRYPTOGRAPHY_KEY}

#Соль для хеширования учетных данных пользователей ПУСК (значение будет загружено из Docker secret)
security.salt=${SECURITY_SALT}

#Настройка проверки сложности пароля
check.password.strength=${CHECK_PASSWORD_STRENGTH:true}